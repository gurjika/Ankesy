services:
  mysql:
    image: mysql:8.0
    ports:
      - 3306:3306

    environment:
    
      - MYSQL_DATABASE=ankesy
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}


    volumes:
      - ../ankesydata:/var/lib/mysql 


  redis:
    image: redis
    # ports:
    #   - "6379:6379"

    expose:
      - "6379"

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 1s
      retries: 5

  django:

    build: .
    # command: ["gunicorn", "poolhub.wsgi:application", "-b", "0.0.0.0:8000", '--reload']
    command: ["./wait-for-it.sh", "mysql:3306", "--", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    # ./wait-for-it.sh", "mysql:3306", "--",

    # ports:
    #   - "8000:8000"

    volumes:
      - .:/app

    environment:
      - DB_HOST=mysql
      - DB_PASSWORD=${DB_PASSWORD}




    depends_on:
      # - mysql
      - redis
      # - celery

    restart: on-failure

  # celery:
  #   build: .
  #   command: celery -A poolhub worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     redis:
  #       condition: service_healthy
      
      

  # celery-beat:
  #   build: .
  #   command: celery -A poolhub beat --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
      
  #     redis:
  #       condition: service_healthy




  nginx:
    image: nginx:latest
    # command: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; nginx -s reload; sleep 12h & wait $${!}; done;'"


    ports:
      - "80:80"  
      - "443:443"

    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/static
      - ./media:/app/media
      - certbot-etc:/etc/letsencrypt  # For SSL certificates
      - certbot-var:/var/lib/certbot   # For Certbot challenges
      - /var/www/certbot:/var/www/certbot 
    depends_on:
      - django
    restart: always


  certbot:
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt  # Stores the certificates
      - certbot-var:/var/lib/certbot   # Stores Certbot state
      # - ./certbot/www:/var/www/certbot # Webroot for HTTP challenges
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; certbot certonly --webroot -w /var/www/certbot --email lgurjidze@gmail.com --agree-tos --no-eff-email -d strikem.site; while :; do sleep 12h; done;'"

    depends_on:
      - nginx
    
    restart: always



volumes:
  ankesydata:
  certbot-etc:
  certbot-var: